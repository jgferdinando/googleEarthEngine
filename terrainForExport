// Load the SRTM image.
var srtm = ee.Image('CGIAR/SRTM90_V4');
var geometry = ee.Geometry.Rectangle([-102.879083, 32.915150, -102.779083, 33.465150]);
var dataset = ee.Image('USGS/NED');
var elevation = dataset.select('elevation');
var elevationVis = {
  min: 900,
  max: 1300.0,
  gamma: 1.6,
};

Map.addLayer(elevation, elevationVis, 'Elevation');
var lines = ee.List.sequence(800, 1600, 2.5)
 
var contourlines = lines.map(function(line) {
var mycontour = elevation
.convolve(ee.Kernel.gaussian(5, 3))
.subtract(ee.Image.constant(line)).zeroCrossing()
.multiply(ee.Image.constant(line)).toFloat();
return mycontour.mask(mycontour);
})
contourlines = ee.ImageCollection(contourlines).mosaic()
Map.addLayer(contourlines, {min: 800, max: 1600}, 'contours')
Map.centerObject(geometry,11)
Map.setCenter(-102.829083, 32.965150, 11);


Export.image.toDrive({
  image: contourlines,
  description: 'contourExport',
  crs: 'EPSG:3857',
  scale: 12
});

//contourlines = ee.Image.constant(1).clip(geometry).addBands(contourlines);

var vectorContours = contourlines.reduceToVectors({
  geometry: geometry,
  crs: 'EPSG:3857',
  scale: 15,
  geometryType: 'polygon',
  eightConnected: false,
  labelProperty: 'zone',
  reducer: ee.Reducer.mean()
});

//Map.addLayer(vectorContours);

Export.table.toDrive({
  collection: vectorContours,
  description:'contourVectors',
  fileFormat: 'SHP'
});
///////////////////////////////////////////

// Apply an algorithm to an image.
var slope = ee.Terrain.slope(srtm);

// Display the result.

var aspect = ee.Terrain.aspect(srtm);

// Convert to radians, compute the sin of the aspect.
var sinImage = aspect.divide(180).multiply(Math.PI).sin();

// Display the result.
//Map.addLayer(sinImage, {min: -1, max: 1}, 'sin');
//Map.addLayer(slope, {min: 0, max :10}, 'slope');
//Map.addLayer(srtm, {min: 900, max :1200}, 'srtm');

var srtm = srtm.visualize({min: 900, max :1200});
Export.image.toDrive({
  image: srtm,
  description: 'srtm',
  crs: 'EPSG:3857',
  scale: 10
});

var slope = slope.visualize({min: 900, max :1200});
Export.image.toDrive({
  image: slope,
  description: 'slope',
  crs: 'EPSG:3857',
  scale: 10
});

var sinImage = sinImage.visualize({min: 900, max :1200});
Export.image.toDrive({
  image: sinImage,
  description: 'sinImage',
  crs: 'EPSG:3857',
  scale: 10
});
