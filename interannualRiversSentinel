//rgb composite river meanders
function maskS2clouds(image) {
  var qa = image.select('QA60');

  var cloudBitMask = 1 << 10;
  var cirrusBitMask = 1 << 11;

  var mask = qa.bitwiseAnd(cloudBitMask).eq(0)
      .and(qa.bitwiseAnd(cirrusBitMask).eq(0));

  return image.updateMask(mask).divide(10000);
}

var composite1 = ee.ImageCollection('COPERNICUS/S2')
  .filterDate('2016-01-01','2016-12-31')
  .filter(ee.Filter.calendarRange(5,11,'month'))  
  .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 10))
  .map(maskS2clouds)
  .median();
var composite2 = ee.ImageCollection('COPERNICUS/S2')
  .filterDate('2017-01-01','2017-12-31')
  .filter(ee.Filter.calendarRange(5,11,'month')) 
  .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 10))
  .map(maskS2clouds)
  .median();
var composite3 = ee.ImageCollection('COPERNICUS/S2')
  .filterDate('2018-01-01','2018-12-31')
  .filter(ee.Filter.calendarRange(5,11,'month')) 
  .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 10))
  .map(maskS2clouds)
  .median();
//var composite1 = ee.Algorithms.Landsat.simpleComposite({
//  collection:L81,
//  asFloat:true})
//var composite2 = ee.Algorithms.Landsat.simpleComposite({
//  collection:L82,
//  asFloat:true})
//var composite3 = ee.Algorithms.Landsat.simpleComposite({
//  collection:L83,
//  asFloat:true})

var aero_1 = composite1.select("B1")
var nir_1 = composite1.select("B8")
var river_1 = aero_1.divide(nir_1) 

var aero_2 = composite2.select("B1")
var nir_2 = composite2.select("B8")
var river_2 = aero_2.divide(nir_2)

var aero_3 = composite3.select("B1")
var nir_3 = composite3.select("B8")
var river_3 = aero_3.divide(nir_3)

var rivers = composite1
  .addBands(river_1.rename('river_1'))
  .addBands(river_2.rename('river_2'))
  .addBands(river_3.rename('river_3'))  
Map.addLayer(rivers, {bands: ["river_1", "river_2", "river_3"], min:0, max:5, opacity:1})
var nbrRGB = rivers.visualize({
  bands: ['river_1', 'river_2', 'river_3'],
  min:0, max:5});
Export.image.toDrive({
  image: nbrRGB,
  description: 'nbrRGB',
  crs: 'EPSG:3857',
  scale: 30});
